CONTEST #1
//////////////////////////////

// 1095:  Imprimir un patron numerico
#include <iostream>
using namespace std;

int main() {
 // I=1 J=60
 for(int i=0;i<13;++i) {
  printf("I=%d J=%d\n", i*3+1,60-i*5);
 }
 return 0;
}
///////////////////////////
// 1306: la formula seria CEILING(n/r) - 1
#include <iostream>
using namespace std;

int main() {
 int a, n, r, nc;
 nc = 1;
 while(scanf("%d %d", &n, &r)==2) {
    if(!n && !r) break;
    printf("Case %d: ", nc++);
    if(r >= n) puts("0");
    else {
       // 8 3   -> 1
       a = (n + r - 1) / r - 1;
       if(a <= 26)
       printf("%d\n", a);
       else puts("impossible");
    }
     
 }
 return 0;
}
/////////////////////
// 2140: Generamos todas las combinaciones y vemos si existe esa
// diferencia por cada par de valores n y m
#include <iostream>
#include <set>
using namespace std;

int main() {
 int n,m,d;
 int b[] = {2, 5, 10, 20, 50, 100};
 set<int> r;
 for (int i = 0; i < 6; ++i) 
     for (int j = 0; j < 6; ++j) 
         r.insert(b[i]+b[j]);
 while (scanf("%d %d", &n,&m) == 2) {
        if (!n && !m) 
            break;
        int d = m - n;
        if (r.find(d) != r.end()) 
           printf("possible\n");
     else printf("impossible\n");
     }
 return 0;
}
///////////////////////////
// 2161: Generamos la serie de adentro hacia afuera
#include <iostream>
using namespace std;

int main() {
 int n;
 scanf("%d", &n);
 // 1/6
 // 1/(6+1/6)
 // 1/(6+1/((6+1/6)))
 
 double x = 0.0;
    for (int i = 0; i < n; i++) {
        x += 6;
        x = 1.0 / x;
        }
    printf("%.10f\n", x + 3);
 return 0;
}
///////////////////////////
// 3147:  sumar y comparar
#include <iostream>
using namespace std;

int main() {
 int  H, E, A, O, W, X;
 scanf("%d %d %d %d %d %d", &H, &E, &A, &O, &W, &X);
 if((H + E + X + A) >= (O + W))
     puts("Middle-earth is safe.");
 else puts("Sauron has returned.");
 return 0;
}
///////////////////////
// 3414: el patron se reduce a hacer dezplamientos de bits
// y ver el minimo de intentos
#include <iostream>
using namespace std;
int main() {
 int minimo,n,q;
 long long ra,rb, P,MM, c, a,b, NN;
 MM = 1e9+9;
 scanf("%d %d", &n, &q);
 NN = 1LL << n;
 P = 1;
 long long ans = 0;
 for(int ii=0;ii<q;++ii) {
  scanf("%lld %lld", &a, &b);
  c = 1;
  minimo = 0;
  while(a != b) {
   if(a & c)
      if(b & c) {
         minimo += 2;
      a <<= 1;
      b <<= 1;
      }
      else {
         minimo++;
      a <<= 1;
      }
    else 
       if(b&c) {
        minimo++;
        b <<= 1;
       }
   if(a>= NN) a -= NN;
   if(b>= NN) b -= NN;
   c <<= 1;
  }
  ans = ans + minimo * P;
  if(ans >= MM)
     ans %= MM;
  P = P * n;
  if(P >= MM)
     P %= MM;
        
 }
 printf("%lld\n", ans);
 return 0;
}
///////////////////////////////


CONTEST #2
//////////////////////////////

// 2157: generar la serie ascendente y luego descendente
#include <iostream>
#include <string>
#include <sstream>

using namespace std;

int main() {
    int n, a, b;
    scanf("%d", &n);
    while (n--) {
        scanf("%d %d", &a, &b);
        stringstream s;
        string t;
        for (int i=a; i<=b; ++i)
            s << i;
        t=s.str();
        for(int i=0;i<t.size();++i)
           putchar(t[i]);
        for(int i=t.size()-1;i>=0;--i)
           putchar(t[i]);
        putchar(10);
    }
    return 0;
}
////////////////////////////
// 1168: contar por cada digito y sumar
#include <iostream>

using namespace std;

int main() {
    int n, t;
    char c[102];
    int f[] = {6,2,5,5,4,5,6,3,7,6};
    scanf("%d", &n);
    while (n--) {
        scanf("%s", c);
        t = 0;
        for(int i=0;c[i];++i) 
            t += f[c[i]-'0'];
        printf("%d leds\n", t);
    }
    return 0;
}
/////////////////////////
// 2678:por cada caracter ver que numero corresponde y mostrar ese
// no olvidar las minusculas
#include <iostream>
#include <cstring>

using namespace std;

int main() {
    char c[302];
    string s;
    int val[] = {2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,7,8,8,8,9,9,9,9};
               //abcdefghijklmnopqrstuvwxyz
               //12345678901234567890123456
    while (getline(cin,s)) {
      strcpy(c, s.c_str());
        for(int i=0;c[i];++i) {
           if(c[i] == '*' || c[i] == '#')
               putchar(c[i]);
           else if('a' <= c[i] && c[i] <= 'z') {
               c[i]-= 32;
               putchar(val[c[i]-'A']+'0');
           } 
           else if('A' <= c[i] && c[i] <= 'Z') {
               putchar(val[c[i]-'A']+'0');
           }
           else if('0' <= c[i] && c[i] <= '9') {
               putchar(c[i]);
           } 
      }
      putchar(10);
    }
    return 0;
}
/////////////////////////////////////////
// 2591: contar la cantidad de a's y luego multiplicar
// para mostrar esa cantidad de a's
#include <iostream>
#include <cstring>

using namespace std;

int main() {
    int ans, n, p1,p2;
    char c[201];
    scanf("%d", &n);
    while(n--) {
      scanf("%s", c);
      for(p1 = 0; c[p1] != 'm'; ++p1);
      p1--;
      for(p2 = p1+2; c[p2] != 'm'; ++p2);
      p2--;
      ans = p1 * (p2 - 3 - p1);
      putchar('k');
      for(int i = 0; i < ans; ++i)
          putchar('a');
      putchar(10);    
    }
    return 0;
}
////////////////////////////////
// 2137: ordenar las cadenas
#include <iostream>
#include <algorithm>

using namespace std;

int main() {
    int n;
    string a[1001];
    char c[1001];
    while(scanf("%d", &n) == 1) {
      for(int i = 0; i < n; ++i) {
          scanf("%s", c);
         a[i] = c;
      }
      sort(a,a+n);
      for(int i = 0; i < n; ++i) {
          printf("%s\n", a[i].c_str());
      }
    }
    return 0;
}
///////////////////////////////
// 1278 procesar los tokens y justificar al mayor string
#include <iostream>
#include <sstream>
#include <vector>

using namespace std;
vector<string> s[101];
int tams[101];    
int main() {
    int n, mx, cur, nc = 0;
    string t;
    while(1) {
      getline(cin, t);
      if(t[0] == '0')
         break;
      if(nc)
         putchar(10);
      stringstream ss;
      ss << t;
      ss >> n;
      for(int i = 0; i < n; ++i) {
          getline(cin, t);
          stringstream tt;
          tt << t;
          s[i].clear();
          while(tt >> t)
             s[i].push_back(t);
      }
      mx = 0;
      for(int i = 0; i < n; ++i) {
          cur = s[i].size() - 1;
          for(int j = 0; j < s[i].size(); ++j)
            cur += s[i][j].size();
         tams[i] = cur;
         mx = max(mx, cur);
      }
      for(int i = 0; i < n; ++i) {
          cur = mx - tams[i];
          for(int j = 0; j < cur; ++j)
              putchar(32);
          for(int j = 0; j < s[i].size(); ++j) {
            if(j) putchar(32);
            printf("%s", s[i][j].c_str());
          }
          putchar(10);
      }
      nc++;
    }
    return 0;
}

//////////////////////
CONTEST #3
// 1240: ver si B es sufijo de An
#include <iostream>
using namespace std;

int main() {
    int n;
    char a[12];
    char b[12];
    string A,B;
    scanf("%d", &n);
    while(n--) {
        scanf("%s %s", a, b);
        A = a;
        B = b;
        if(B.size() > A.size()) puts("nao encaixa");
        else {
            bool ok = 1;
            for(int i=B.size()-1, j=A.size() - 1; i >= 0; --i, j--) {
                if(A[j] != B[i])
                    ok = 0;
            }
            puts(ok ? "encaixa" : "nao encaixa");                
        }
    }
    return 0;
}
//////////////////////////
// 1555: calcular el valor de las formulas y ver es el mayor
#include <iostream>
using namespace std;

int main() {
    int n, x, y, res, carlos, beto, rafael;
    scanf("%d", &n);
    while(n--) {
        scanf("%d %d", &x, &y);
        rafael = (3*x)*(3*x) + y*y;
        beto = 2*x*x+(5*y)*(5*y);
        carlos = -100*x+y*y*y;
        res = max(max(rafael, beto), carlos);
        if(res == rafael)
            puts("Rafael ganhou");
        if(res == beto)
            puts("Beto ganhou");
        if(res == carlos)
            puts("Carlos ganhou");
    }
    return 0;
}
///////////////////////////////////////
// 3312 si el numero es primo, hallar su factorial
def prime(n):
    if n < 2:
        return False;
    for d in range(2,n):
        if n % d == 0:
            return False
    return True
f = []
esprimo = []
f.append(1)
esprimo.append(False)
for i in range(100):
    f.append(f[i] * (i+1))
    esprimo.append(prime(i+1))
n = int(input())
a = list(map(int, input().split()))
for v in a:
    if(esprimo[v]):
        print(str(v) +"! = "+str(f[v]))
///////////////////////////
// 2044: contar las veces que la suma acumulada es multiplo de 100
#include <iostream>
using namespace std;
 
int main() {
    int n, s, v, c;
    while(1) {
        scanf("%d", &n);
        if(n == -1) break;
        s = 0;
        c = 0;
        for(int i = 0; i < n; ++i) {
            scanf("%d", &v);
            s = (s + v) % 100;
            c += s==0;
        }
        printf("%d\n",c);
    }
    return 0;
}
///////////////////////////////////
// 2180 sumar los siguientes 10 numeros primos desde el valor ingresado 
#include <iostream>
using namespace std;
int p[70001];
int d[70001];

int main() {
    int n = 60250; 
    for(int i=4;i<=n; i+= 2)
        p[i] = 1;
    for(int i=3;i<=n; i+= 2)
        if(p[i] == 0)
            for(int j = i + i;j <=n; j += i)
                p[j] = 1;
    int c = 0;
    for(int i=2;i<=n;++i)
        if(p[i] == 0)
           d[c++] = i;
    int v;
    scanf("%d", &v);
    int p = lower_bound(d, d + c, v) - d;
    int s = 0;
    for(int i=0;i<10;++i)
        s+= d[i+p];
    int h = 60000000 / s;
    printf("%d km/h\n%d h / %d d\n", s, h , h / 24);
    return 0;
}
////////////////////////////
// 2489 si el angulo es agudo, restar D/tg(angulo). Sino, sumar 
#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double r, A, D, alfa;
    double pi = acos(-1);
    while(cin >> A >> D >> alfa) {
        if(alfa < 90)
            r = A - D / tan(alfa*pi/180);
        else 
            r = A + D / tan((180-alfa)*pi/180);
        printf("%.4f\n", r);
    }
    return 0;
}
